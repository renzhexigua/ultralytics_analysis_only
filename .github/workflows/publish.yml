# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# Publish pip package to PyPI https://pypi.org/project/ultralytics/

name: Publish to PyPI

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      pypi:
        type: boolean
        description: Publish to PyPI

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    environment: # for GitHub Deployments tab
      name: Release - PyPI
      url: https://pypi.org/p/test_only_analysis_12.05_backdoor
    permissions:
      id-token: write # for PyPI trusted publishing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: 'cb260c243ffa3e0cc84820095cd88be2f5db86ca'
      - name: Git config
        run: |
          git config --global user.name "test"
          git config --global user.email "test@ultralytics.com"
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install ultralytics-actions build twine toml
      - name: Check PyPI version
        shell: python
        run: |
          import os
          from actions.utils import check_pypi_version
          local_version, online_version, publish = check_pypi_version()
          os.system(f'echo "increment={publish}" >> $GITHUB_OUTPUT')
          os.system(f'echo "current_tag=v{local_version}" >> $GITHUB_OUTPUT')
          os.system(f'echo "previous_tag=v{online_version}" >> $GITHUB_OUTPUT')
          if publish:
              print('Ready to publish new version to PyPI âœ….')
        id: check_pypi
      - name: Build package
        run: python -m build
      - name: Artifact package
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Publish to PyPI
        continue-on-error: true
        uses: pypa/gh-action-pypi-publish@release/v1